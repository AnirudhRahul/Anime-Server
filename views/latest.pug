doctype html
html
  head
    meta(name='viewport', content='width=device-width, initial-scale=1')
    meta(name='description', content='The best anime watching experience')
    meta(property='og:title', content='Aniserve')
    meta(property='og:url', content='')
    meta(property='og:description', content='The best anime watching experience')
    meta(property='og:image', content='/media/icon-chan.png')
    meta(property='og:type', content='website')

  include header.pug
  style.
    .grid-view {
      max-width: 1600px;
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(22.5rem, 1fr));
      grid-auto-rows: auto;
      margin: 0 auto;
      gap:0.75rem;
    }
    span {
      position:absolute; 
      width:100%;
      height:100%;
      top:0;
      left: 0;
      z-index: 1;
    }
    .card {
      position:relative;
    }
    
    /* Position child elements relative to this element */
    .aspect-ratio-box {
        position: relative;
    }

    /* Create a pseudo element that uses padding-bottom to take up space */
    .aspect-ratio-box::after {
        display: block;
        content: '';
        /* 16:9 aspect ratio */
        padding-bottom: 56.25%;
    }

    /* Image is positioned absolutely relative to the parent element */
    .aspect-ratio-box img {
        /* Image should match parent box size */
        position: absolute;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
    }
    
  div(class="m-3")
    div(class="grid-view center")
      each episode in episode_list
        - thumbnail_src = episode.metadata.small_thumbnail_path || episode.metadata.thumbnail_path
        - video_link = '/show/'+encodeURIComponent(episode.show_name)+'/episode/'+episode.episode
        if episode.episode!=-1
          div(class="card border border-secondary mx-1")
            a(href=video_link)
              span()
            div(class="aspect-ratio-box")
                img(class="card-img-top lazy" data-lazy=thumbnail_src src='/media/blank.png' onerror="if (this.src != '/media/default-image.jpg') this.src = '/media/default-image.jpg';")
            div(class="card-body")
              h5(class="card-title")= episode.show_name
              h5(class="card-text")= "Episode "+episode.episode
          
  script.
    const config = {
      rootMargin: '60% 0px',
    };
    const targets = document.querySelectorAll('img.lazy');
    const lazyLoad = target => {
      const io = new IntersectionObserver((entries, observer) => {
        entries.forEach(entry => {
          if (entry.isIntersecting) {
            const img = entry.target;
            const src = img.getAttribute('data-lazy');
            img.setAttribute('src', src);
            observer.disconnect();
          }
        });
      }, config);

      io.observe(target)
    };

    targets.forEach(lazyLoad);
