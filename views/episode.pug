- video_src = '/prod-data/videos/'+encodeURIComponent(data.show_name)+'/'+encodeURIComponent(data.basename+data.video_ext)
- subtitle_src = '/prod-data/videos/'+encodeURIComponent(data.show_name)+'/'+encodeURIComponent(data.basename+data.subtitle_ext)
- thumbnail_src = '/prod-data/videos/'+encodeURIComponent(data.show_name)+'/'+encodeURIComponent(data.basename+data.thumbnail_ext)
doctype html
html
  head
    meta(name='viewport', content='width=device-width, initial-scale=1')
    meta(name='description', content='Episode ' + data.episode)
    meta(property='og:description', content='Episode ' + data.episode)  
    meta(property='og:title', content=data.show_name)
    meta(property='og:url', content='')
    meta(property='og:image', content='/media/icon-chan.png')
    meta(property='og:type', content='video.episode')

    title= data.show_name
    script.
      window.HELP_IMPROVE_VIDEOJS = false;
    meta(name='viewport', content='width=device-width, initial-scale=1')
    link(rel='stylesheet', href='https://vjs.zencdn.net/7.8.4/video-js.css')
    link(rel='stylesheet', href='/css/libjass.css')
    style(type='text/css').
      .video-js .vjs-text-track-display > div > div > div {
        font-size: 0.75em !important; 
        font-weight: 300 !important;
        text-shadow:
          -1px -1px 0 #000,
           0   -1px 0 #000,
           1px -1px 0 #000,
           1px  0   0 #000,
           1px  1px 0 #000,
           0    1px 0 #000,
          -1px  1px 0 #000,
          -1px  0   0 #000;
      	background:transparent !important;
      }
      .embed-responsive{
        max-height: 81vh !important;
        width: 50%;
        margin: 0 auto;
      }

  include header.pug
  body
    div(class="mx-3")
      div(class="mt-3 embed-responsive embed-responsive-16by9" align="center")
        video(align="center" id="my-video" class="video-js embed-responsive-item vjs-default-skin vjs-big-play-centered vjs-fill" controls preload="auto" playsinline )
          source(src=video_src, type='video/mp4')
          //- track(srclang="en" label="English" src=subtitle_src default)
    div(class="m-3")
      h2(style="font-size:min(5vw,3em)")= data.show_name
      h3(style="font-size:min(3.75vw,2.25em)")= "Episode "+data.episode
      a(href=video_src style="font-size:min(3vw,1em)") Download Link
      p(id="output")
      if prev!=-1
        a(href= prev style="font-size:min(3vw,1em)") Previous Episode
      p
      if next!=-1
        a(href= next style="font-size:min(3vw,1em)") Next Episode

    script(src='/js/subtitles-octopus.js')
    script(src='https://vjs.zencdn.net/7.8.4/video.min.js')
    script(src='/js/landscape.js')

    script.
      var player = videojs('my-video',{
          userActions: {
            doubleClick: false
          },
        }
      );
      player.ready(function () {
            // This would look more nice as a plugin but is's just as showcase of using with custom players
            var video = this.tech_.el_;
            window.SubtitlesOctopusOnLoad = function () {
                var options = {
                    video: video,
                    // lossyRender: true,
                    subUrl: '#{subtitle_src}',
                    fonts: ['/fonts/OpenSans-Semibold.ttf'],
                    //onReady: onReadyFunction,
                    debug: false,
                    workerUrl: '/js/subtitles-octopus-worker.js'
                };
                window.octopusInstance = new SubtitlesOctopus(options); // You can experiment in console
            };
            if (SubtitlesOctopus) {
                SubtitlesOctopusOnLoad();
            }
        });
      
      
      player.poster('#{thumbnail_src}')
      //Useful for console debugging
      window.player = player

      //add big middle button to video player
      //var toggle = new PlayToggle(player);
      
      document.getElementById("my-video").addEventListener('click', function (event) {
        if(event.detail == 2){
          window.player.requestFullscreen();
        }
      });
      
      document.querySelector('.vjs-big-play-button').addEventListener('touchend', player.requestFullscreen)
      window.lastClick = 0
      window.togglePlayer = function(){
        if(window.player.paused()){
          window.player.play()
        }
        else{
          window.player.pause()
        }
      }    
      window.seekForward = function(){
        window.player.currentTime(window.player.currentTime()+10)
      }
      window.seekBackward = function(){
        window.player.currentTime(window.player.currentTime()-10)
      }
      
      // Keyboard shortcuts
      document.addEventListener("keydown", function(event) {
        const code = event.keyCode
        // Space bar or K
        if (code == 32 || code == 75) {
            window.togglePlayer()
        }
        // Right arrow or L
        else if (code == 39 || code == 76) {
            window.seekForward()
        }
        // Left arrow or J
        else if (code == 37 || code == 74) {
            window.seekBackward()
        }
        else{
          return
        }
        //Prevent defualt action if keypress was caught
        event.preventDefault();

      });
      
      document.getElementById("my-video").addEventListener('touchstart', function (event) {
        const curtime = (new Date()).getTime()
        if(event.touches.length>1){
          window.togglePlayer()
          window.lastClick = 0
        }
        else if(curtime-window.lastClick<250){
          const width = document.getElementById("my-video").offsetWidth
          const x = event.touches[0].clientX
          if(x > width*(0.5+0.125)){
            window.seekForward()
          }
          else if(x < width*(0.5-0.125)){
            window.seekBackward()
          }
          else{
            window.togglePlayer()
          }
          window.lastClick = 0
        }
        else
          window.lastClick = curtime
      });

      player.responsive(true);
      player.landscapeFullscreen();
